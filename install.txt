- setup computer
  - setup bluetooth
  - power settings
    - screen blank after 15 minuts
  - set dark theme

- update system
  - sudo apt-get update
  - sudo apt-get upgrade -y

- install python and pip
  - sudo apt-get install python3-pip python3-venv

- installing ansible
  - setup python venv
    - cd ~
    - python3 -m venv venv
    - cd venv
    - source ~/venv/bin/activate # activate venv
  - install ansible
    - pip install ansible
  - deactivate venv
    - deactivate # after this, ansible will not be accessible (util you activate venv again)

- install prerequisite tools
  - sudo apt-get install xclip    # provides access to clipboard from terminal
  - sudo apt-get install maim     # util for taking screenshots on the desktop
  - sudo apt-get install xdotool  # x11 automation tool (lets you simulate keyboard and mouse inputs, resize activity etc)

- create ssh key:
  - generate key if you already don't have it
    - ssh-keygen -t ed25519 -C "goran.mrzljak@gmail.com"
    - just choose all defaults (press enter)
  - copy key to clipboard
    - xclip -sel c < ~/.ssh/id_ed25519.pub
  - add key to github at https://github.com/settings/keys
    - press 'New key'
    - enter name
    - paste public key

- install git
  - sudo apt-get install -y git
  - setup git
    - git config --global user.email "goran.mrzljak@gmail.com"
    - git config --global user.name "Goran MrÅ¾ljak"
    - maybe there is a better way, directly writing to config? maybe the above is better


- install zsh
  - sudo apt-get install -y zsh
  - setup zsh
    - is there an automatic way of doing this? possibly by creating a .zsh file from scratch
    - execute: zsh
    - will be prompted for an option the first time, select (2)
  - install Oh My Zsh
    - sh -c "$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)"
  - set zsh as the default shell
    - execute: chsh -s $(which zsh)
    - this seems to require rebooting the comp, is there a better way of doing that?

- setup vim
  - install
    - sudo apt-get install -y vim
    - see how you can run sudo without having to always enter pass, or maybe you will only have to do this once
  - setup
    - create ~/.vimrc
      - see what it looks like for details

- install curl
  - sudo apt-get install curl

- setup terminal
  - install 'alacritty':
    - sudo apt-get install alacritty
  - set alacritty to have the highest proiority:
    - sudo update-alternatives --install /usr/bin/x-terminal-emulator x-terminal-emulator /usr/local/bin/alacritty 50
  - set alacritty as a default terminal:
    - sudo update-alternatives --config x-terminal-emulator
    - then select

- install tmux (maybe, see if it is useful):
  - sudo apt-get install tmux

- setup i3
  - install i3

- install node
  - install nvm
    - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
    - this is auto added to zshrc
      - export NVM_DIR="$HOME/.nvm"
      - [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
      - [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
  - relaod rc
    - source ~/.zshrc
  - install node
    - nvm install node # install latest version of node

- install racket
  - install
    - https://download.racket-lang.org/installers/8.14/racket-8.14-x86_64-linux-cs.sh
    - OR use snap: sudo snap install racket
  - setup
    - packages
      - raco pkg install --auto racket-langserver fmt
    - vscode
      - extensions
        - Magic Racket
        - racket-fmt
      - settings
        ```
        "[racket]": {
          "editor.defaultFormatter": "lishizhen.racket-fmt"
        },
        ```
  
- install chrome
  - cd ~/Downloads
  - wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
  - sudo dpkg -i google-chrome-stable_current_amd64.deb
  - pin to dash

- install okular (for pdfs)
  - sudo apt-get install -y okular
  - pin to dash

- install qbittorrent
  - sudo add-apt-repository ppa:qbittorrent-team/qbittorrent-stable
  - sudo apt-get update
  - sudo apt-get install qbittorrent

- install mpv player
  - sudo apt-get install vlc

- install vscode
  - install
    - sudo snap install code --classic # on work computer, this worked fine; locally I had issues with racket langserver when using this type of installation
    - OR: https://code.visualstudio.com/docs/setup/linux, OR https://phoenixnap.com/kb/install-vscode-ubuntu
    - part of the process:
      ```
      sudo apt-get install wget gpg
      wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
      sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
      echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" |sudo tee /etc/apt/sources.list.d/vscode.list > /dev/null
      rm -f packages.microsoft.gpg

      sudo apt install apt-transport-https
      sudo apt update
      sudo apt install code # or code-insiders
      ```
  - setup
    - extensions:
      - code --install-extension ms-vscode.cpptools
      - list:
        - evzen-wybitul.magic-racket
        - lishizhen.racket-fmt
    - config is at ~/.config/Code/User/settings.json
  - setup to work with i3
    - set password store to gnome
      - https://github.com/microsoft/vscode/issues/187338#issuecomment-1630300049
      - Adding "password-store": "gnome" to ~/.vscode/argv.json fixed the issue.
